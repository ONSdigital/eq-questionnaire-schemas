name: PR

on:
  pull_request:
    branches:
      - main


jobs:
  lint:
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: |
          echo "PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1.4.1
        with:
          version: 2.1.2
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.virtualenvs

      - name: Cache Poetry virtualenv
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: cache-virtualenv
        with:
          path: ~/.virtualenvs
          key: ${{ runner.os }}-${{ env.PYTHON_VERSION }}-virtualenvs-${{ hashFiles('poetry.lock') }}
      - name: Install virtual environment
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        run: poetry install
      - name: Lint Python
        run: make lint
  validate-schemas:
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: |
          echo "PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1.4.1
        with:
          version: 2.1.2
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.virtualenvs

      - name: Cache Poetry virtualenv
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: cache-virtualenv
        with:
          path: ~/.virtualenvs
          key: ${{ runner.os }}-${{ env.PYTHON_VERSION }}-virtualenvs-${{ hashFiles('poetry.lock') }}
      - name: Install virtual environment
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        run: poetry install
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Spin up validator
        run: make run-validator
      - name: Validate schemas
        run: make validate-schemas
  test-translation-templates:
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: |
          echo "PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1.4.1
        with:
          version: 2.1.2
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.virtualenvs

      - name: Cache Poetry virtualenv
        uses: actions/cache@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        id: cache-virtualenv
        with:
          path: ~/.virtualenvs
          key: ${{ runner.os }}-${{ env.PYTHON_VERSION }}-virtualenvs-${{ hashFiles('poetry.lock') }}
      - name: Install virtual environment
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        run: poetry install
      - name: Test translation templates
        run: make test-translation-templates
